@using SL.Data
@using SL.Util
@{
    RequestUtil req = new RequestUtil();

    if ("add" == Request.QueryString["action"])
    {
        string title = req.String("title", false, "need title");
        string subTitle = req.String("subtitle");
        int categoryId = req.Int("categoryId", false, "need categoryid");
        string content = req.String("content", false, "need content");
        var cover = req.File("cover");
        string tags = req.String("tags");
        int sort = req.Int("sort");

        if (req.HasError)
        {
            HtmlUtil.Output(new { success = false, msg = req.FirstError, errors = req.GetErrors() });
            return;
        }

        string src = cover.IsEmpty ? null : cover.Save();

        SQL.Execute("insert into News (Title,SubTitle,CategoryID,Cover,Content,PublishTime,Tags,Sort) values (@p0,@p1,@p2,@p3,@p4,@p5,@p6,@p7)", title, src, categoryId, src, content, DateTime.Now, tags, sort);

        HtmlUtil.Output(new { success = true });
        return;
    }
    else if ("modify" == Request.QueryString["action"])
    {
        int id = req.Int("id", false, "need id");
        string title = req.String("title", false, "need title");
        string subTitle = req.String("subtitle");
        int categoryId = req.Int("categoryId", false, "need categoryid");
        string content = req.String("content", false, "need content");
        var cover = req.File("cover");
        string tags = req.String("tags");
        int sort = req.Int("sort");

        if (req.HasError)
        {
            HtmlUtil.Output(new { success = false, msg = req.FirstError, errors = req.GetErrors() });
            return;
        }

        string set = "";
        List<object> parameters = new List<object> { id, title, subTitle, categoryId, cover, content, tags, sort };

        if (!cover.IsEmpty)
        {
            string origSrc = SQL.QueryValue<string>("select Picture from Prize where PrizeID=@p0", id);

            RequestFile.Delete(origSrc);
            string src = cover.Save();

            set = ",Picture=@p3";
            parameters.Add(src);
        }

        SQL.Execute("update News set Title,SubTitle,CategoryID,Cover,Content,Tags,Sort" + set + " where NewsID=@p0", parameters.ToArray());

        HtmlUtil.Output(new { success = true });
        return;
    }
    else if ("delete" == Request.QueryString["action"])
    {
        int id = req.Int("id", false, "need id");

        if (req.HasError)
        {
            HtmlUtil.Output(new { success = false, msg = req.FirstError, errors = req.GetErrors() });
            return;
        }

        string origSrc = SQL.QueryValue<string>("select Picture from Prize where PrizeID=@p0", id);

        RequestFile.Delete(origSrc);

        SQL.Execute("delete from News where NewsID=@p0", id);

        HtmlUtil.Output(new { success = true });
        return;
    }
    else if ("get" == Request.QueryString["action"])
    {
        int id = req.Int("id");
        var data = SQL.QuerySingle("select NewsID,Title,SubTitle,CategoryID,Cover,Content,PublishTime,Tags,Sort where NewsID=@p0", id);

        HtmlUtil.Output(new { success = true, data = data });
        return;
    }
    else if ("query" == Request.QueryString["action"])
    {
        int page = req.Int("page", defaultValue: 1);
        int pageSize = req.Int("pageSize", defaultValue: 10);
        string keywords = req.String("keywords");
        int categoryId = req.Int("categoryId");

        string where = "1=1";
        List<object> parameters = new List<object>();

        if (categoryId != 0)
        {
            where += " and a.CategoryID=@p" + parameters.Count;
            parameters.Add(categoryId);
        }
        if (!string.IsNullOrEmpty(keywords))
        {
            where += " and (a.Title like '%'+@p" + parameters.Count + "+'%' or a.Tags like '%'+@p" + parameters.Count + "+'%')";
            parameters.Add(keywords);
        }

        int total;

        var data = SQL.QueryPage("NewsID",
            "NewsID,Title,SubTitle,a.CategoryID,b.CategoryName,Cover,Content,PublishTime,Tags,a.Sort",
            "News a left join NewsCategory b on a.CategoryID=b.CategoryID",
            where,
            page,
            pageSize,
            parameters,
            out total,
            new Dictionary<String, bool>
            {
                { "Sort", false },
                { "PublishTime", false },
            });

        if (data != null)
        {
            data.All(a =>
            {
                a.Cover = RequestFile.FullUrl(a.Cover);
                return true;
            });
        }

        HtmlUtil.Output(new { success = true, data = data, total = total });
        return;
    }

    ViewBag.Title = "新闻管理";
    Layout = "~/Views/Shared/_ManageLayout.cshtml";

    var categories = SQL.Query("select CategoryID as value,CategoryName as text,ParentID from NewsCategory order by Sort desc,CategoryID asc");

    List<dynamic> parents = categories == null ? null : categories.Where(a => a.ParentID == 0).ToList();
    List<dynamic> result = new List<dynamic>();

    if (null != parents)
    {
        parents.All(a =>
        {
            result.Add(a);
            result.AddRange(categories.Where(b => (int)b.ParentID == (int)a.value));
            return true;
        });
    }
}
<h1>新闻管理</h1>
<div id="toolbar" class="toolbar"></div>
<div id="grid"></div>
<script>
var categories=@(new MvcHtmlString(Json.Encode(result)));
</script>
<script>
    seajs.use(['jquery','lib/buttons','lib/popup','lib/grid','lib/global.css'],function($,Buttons,popup) {

        //添加
        var addingDialog=new popup.Form({
            url: '?action=add',
            title: '添加新闻',
            width: 820,
            height: 500,
            controls: {
                title: {
                    label: '新闻标题',
                    type: 'text',
                    emptyAble: false,
                    emptyText: '请填写新闻标题'
                },
                subtitle: {
                    label: '子标题',
                    type: 'text'
                },
                categoryId: {
                    label: '类别',
                    type: 'select',
                    emptyAble: false,
                    options: categories
                },
                cover: {
                    label: '封面图片',
                    type: 'file'
                },
                tags: {
                    label: '标签',
                    type: 'text'
                },
                sort: {
                    label: '排序',
                    type: 'text',
                    value: '0'
                },
                content: {
                    label: '正文',
                    type: 'html',
                    emptyAble: false,
                    emptyText: '请填写正文'
                }
            },
            buttons: [{
                text: '添加',
                click: function() {
                    addingDialog.submit({
                        beforeSend: function() {
                        },
                        success: function(res) {
                            if(res.success) {
                                addingDialog.hide().reset();
                                grid.search();
                            } else
                                alert(res.msg);
                        },
                        error: function() {
                        }
                    });
                }
            },{
                text: '取消',
                click: function() {
                    addingDialog.hide();
                }
            }]
        });

        //修改
        var modifyingDialog=new popup.Form({
            url: '?action=modify',
            title: '修改新闻',
            width: 820,
            height: 500,
            controls: {
                id: {
                    type: 'hidden'
                },
                title: {
                    label: '新闻标题',
                    type: 'text',
                    emptyAble: false,
                    emptyText: '请填写新闻标题'
                },
                subtitle: {
                    label: '子标题',
                    type: 'text'
                },
                categoryId: {
                    label: '类别',
                    type: 'select',
                    emptyAble: false,
                    options: categories
                },
                cover: {
                    label: '封面图片',
                    type: 'file'
                },
                tags: {
                    label: '标签',
                    type: 'text'
                },
                sort: {
                    label: '排序',
                    type: 'text',
                    value: '0'
                },
                content: {
                    label: '正文',
                    type: 'html',
                    emptyAble: false,
                    emptyText: '请填写正文'
                }
            },
            buttons: [{
                text: '修改',
                click: function() {
                    modifyingDialog.submit({
                        beforeSend: function() {
                        },
                        success: function(res) {
                            if(res.success) {
                                modifyingDialog.hide().reset();
                                grid.search();
                            } else
                                alert(res.msg);
                        },
                        error: function() {
                        }
                    });
                }
            },{
                text: '取消',
                click: function() {
                    modifyingDialog.hide();
                }
            }]
        });

        var buttons=new Buttons("#toolbar",[{
            text: "添加新闻",
            ico: 'add',
            click: function() {
                addingDialog.show();
            }
        },{
            text: "修改",
            ico: "modify",
            disabled: true,
            click: function() {
                var data=grid.selectedRow().data;
                modifyingDialog.control("id").val(data.NewsID);
                modifyingDialog.control("title").val(data.Title);
                modifyingDialog.control("sort").val(data.Sort);
                modifyingDialog.control("tags").val(data.Tags);
                modifyingDialog.control("subtitle").val(data.SubTitle);
                modifyingDialog.control("categoryId").val(data.CategoryID);
                modifyingDialog.control("content").val(data.Content);
                modifyingDialog.editor("content").html(data.Content);
                modifyingDialog.show();
            }
        },{
            text: "删除",
            ico: "delete",
            disabled: true,
            click: function() {
                if(!window.confirm('确认删除？')) return;
                var data=grid.selectedRow().data;

                $.ajax({
                    url: '?action=delete',
                    type: 'post',
                    data: {
                        id: data.PrizeID
                    },
                    dataType: 'json',
                    success: function(res) {
                        if(res.success) {
                            alert('删除成功！');
                            grid.search();
                        } else
                            alert(res.msg);
                    }
                });
            }
        }]);

        categories.splice(0,0,{ text: '请选择',value: '' })

        var grid=$('#grid').grid({
            search: {
                data: {
                    categoryid: {
                        label: '类别',
                        type: 'select',
                        options: categories
                    },
                    keywords: {
                        label: '关键字',
                        type: 'text'
                    }
                },
                beforeSend: function() {
                    buttons.items([1,2]).disable();
                },
                url: '?action=query'
            },
            onRowSelect: function(row,data) {
                buttons.items([1,2]).enable();
            },
            columns: [{
                text: '编号',
                bind: 'NewsID',
                width: 6
            },{
                text: '标题',
                bind: 'Title',
                width: 10
            },{
                text: '副标题',
                bind: 'SubTitle',
                width: 10
            },{
                text: '类别',
                bind: 'CategoryName',
                width: 6
            },{
                text: '排序',
                bind: 'Sort',
                width: 6
            }]
        }).search();

    });
</script>
